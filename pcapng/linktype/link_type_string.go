// Code generated by "stringer -type=LinkType -output=link_type_string.go"; DO NOT EDIT.

package linktype

import "fmt"

const _LinkType_name = "NullEthernetAX25IEEE802_5ArcnetBSDSLIPPPPFDDIPPP_HDLCPPP_EtherATM_RFC1483RawC_HDLCIEEE802_11FRelayLoopLinuxSLLLTalkPFLogIEEE802_11_PrismIPOverFCSunATMIEEE802_11_RadiotapArcnetLinuxAppleIPOverIEEE1394MTP2WithPHDRMTP2MTP3SCCPDOCSISLinuxIrDAUser0User1User2User3User4User5User6User7User8User9User10User11User12User13User14User15IEEE802_11_AVSBACnet_MS_TPPPP_PPPDGPRS_LLCGPF_TGPF_FLinuxLAPDBluetooth_HCI_H4USBLinuxPPIIEEE802_15_4SITAERFBluetooth_HCI_H4_With_PHDRAX25_KISSLAPDPPPWithDIRC_HDLC_With_DIRFRelayWithDIRIPMBLinuxIEEE802_15_4_NonASK_PHYUSBLinuxMmappedFC_2FC_2_WithFrameDelimsIPNETCAN_SocketCANIPV4IPV6IEEE802_15_4_NoFCSDBusDVB_CIMUX27010STANAG_5066_D_PDUNFLogNetAnalyzerNetAnalyzerTransparentIPOIBMPEG_2_TSNG40NFC_LLCPInfiniBandSCTPUSBPcapRTAC_SerialBluetooth_LE_LLNetlinkBluetooth_LinuxMonitorBluetooth_BREDR_BBBlueTooth_LE_LL_With_PHDRPROFIBUSPKTAPEPONIPMI_HPM_2ZWaveR1R2ZWaveR3WattStopperDLMISO14443RDSUSBDarwinSDLCLoRaTapVSockNordicBLE"

var _LinkType_map = map[LinkType]string{
	0:   _LinkType_name[0:4],
	1:   _LinkType_name[4:12],
	3:   _LinkType_name[12:16],
	6:   _LinkType_name[16:25],
	7:   _LinkType_name[25:34],
	8:   _LinkType_name[34:38],
	9:   _LinkType_name[38:41],
	10:  _LinkType_name[41:45],
	50:  _LinkType_name[45:53],
	51:  _LinkType_name[53:62],
	100: _LinkType_name[62:73],
	101: _LinkType_name[73:76],
	104: _LinkType_name[76:82],
	105: _LinkType_name[82:92],
	107: _LinkType_name[92:98],
	108: _LinkType_name[98:102],
	113: _LinkType_name[102:110],
	114: _LinkType_name[110:115],
	117: _LinkType_name[115:120],
	119: _LinkType_name[120:136],
	122: _LinkType_name[136:144],
	123: _LinkType_name[144:150],
	127: _LinkType_name[150:169],
	129: _LinkType_name[169:180],
	138: _LinkType_name[180:199],
	139: _LinkType_name[199:211],
	140: _LinkType_name[211:215],
	141: _LinkType_name[215:219],
	142: _LinkType_name[219:223],
	143: _LinkType_name[223:229],
	144: _LinkType_name[229:238],
	147: _LinkType_name[238:243],
	148: _LinkType_name[243:248],
	149: _LinkType_name[248:253],
	150: _LinkType_name[253:258],
	151: _LinkType_name[258:263],
	152: _LinkType_name[263:268],
	153: _LinkType_name[268:273],
	154: _LinkType_name[273:278],
	155: _LinkType_name[278:283],
	156: _LinkType_name[283:288],
	157: _LinkType_name[288:294],
	158: _LinkType_name[294:300],
	159: _LinkType_name[300:306],
	160: _LinkType_name[306:312],
	161: _LinkType_name[312:318],
	162: _LinkType_name[318:324],
	163: _LinkType_name[324:338],
	165: _LinkType_name[338:350],
	166: _LinkType_name[350:358],
	169: _LinkType_name[358:366],
	170: _LinkType_name[366:371],
	171: _LinkType_name[371:376],
	177: _LinkType_name[376:385],
	187: _LinkType_name[385:401],
	189: _LinkType_name[401:409],
	192: _LinkType_name[409:412],
	195: _LinkType_name[412:424],
	196: _LinkType_name[424:428],
	197: _LinkType_name[428:431],
	201: _LinkType_name[431:457],
	202: _LinkType_name[457:466],
	203: _LinkType_name[466:470],
	204: _LinkType_name[470:480],
	205: _LinkType_name[480:495],
	206: _LinkType_name[495:508],
	209: _LinkType_name[508:517],
	215: _LinkType_name[517:540],
	220: _LinkType_name[540:555],
	224: _LinkType_name[555:559],
	225: _LinkType_name[559:579],
	226: _LinkType_name[579:584],
	227: _LinkType_name[584:597],
	228: _LinkType_name[597:601],
	229: _LinkType_name[601:605],
	230: _LinkType_name[605:623],
	231: _LinkType_name[623:627],
	235: _LinkType_name[627:633],
	236: _LinkType_name[633:641],
	237: _LinkType_name[641:658],
	239: _LinkType_name[658:663],
	240: _LinkType_name[663:674],
	241: _LinkType_name[674:696],
	242: _LinkType_name[696:701],
	243: _LinkType_name[701:710],
	244: _LinkType_name[710:714],
	245: _LinkType_name[714:722],
	247: _LinkType_name[722:732],
	248: _LinkType_name[732:736],
	249: _LinkType_name[736:743],
	250: _LinkType_name[743:754],
	251: _LinkType_name[754:769],
	253: _LinkType_name[769:776],
	254: _LinkType_name[776:798],
	255: _LinkType_name[798:816],
	256: _LinkType_name[816:841],
	257: _LinkType_name[841:849],
	258: _LinkType_name[849:854],
	259: _LinkType_name[854:858],
	260: _LinkType_name[858:868],
	261: _LinkType_name[868:877],
	262: _LinkType_name[877:884],
	263: _LinkType_name[884:898],
	264: _LinkType_name[898:906],
	265: _LinkType_name[906:909],
	266: _LinkType_name[909:918],
	268: _LinkType_name[918:922],
	270: _LinkType_name[922:929],
	271: _LinkType_name[929:934],
	272: _LinkType_name[934:943],
}

func (i LinkType) String() string {
	if str, ok := _LinkType_map[i]; ok {
		return str
	}
	return fmt.Sprintf("LinkType(%d)", i)
}
